####################
エヴァンス本 28ページ抜粋版
https://www.slideshare.net/masuda220/ss-148093123  プレビュー
・前書き 9
  



対照的な3つのプロジェクト
 モデルを重要視するだけでもダメ
 開発者の役割をあやあって分割したために
 モデリングが実装と切り離された

複雑さという課題
  ソフトウェアの複雑さ は 設計に対するアプローチできまる 
  ドメイン: ユーザの活動やビジネス そのもの
  ・一番の焦点は、doomain とdomain logic 
  ・複雑なドメインの設計は、モデルにもとづけなければならない

設計対開発プロセス

設計とプロセスは切り離せなければならない
  そもそも設計とプロセスの違いはなんだ？

プロセスとして、”アジャイル開発プロセス" というのを目指している
・開発がイテレーティブであること
・開発者 と domain expert が密接



XP 以外にも アジャイルってあるんだ。。。

柔軟な対応 というのであれば、
リファクタリングを迅速にできる前提

本書の構成
1部 ドメインモデルを機能させる
    DDD の目標 を紹介
2部 モデル駆動設計の構成要素
    基本的な構成要素の集まりを作る
    モデル <- 溝 -> 実際のソフトウェア を埋める
    モデルとソフトウェア を
    違いが違いの有効性を補強する関係を維持するのが大事
    そのためには、ここの要素の詳細に注意が必要
    => 3,4部
3部 より深い洞察へ向かうリファクタリング
    実用的なモデルを組み立てる ことを学ぶ
    モデリングの探求とテクニックを扱う

4部 戦略的設計
    大規模なシステムでの構造を扱う

本書が対象とする読者
  多分OK
    XP と ソフトウェア設計に関する知識を並行して補う
  中核となるのは 2,3,9,14 章

ドメイン駆動チーム
　チームがDDDを知って動けた方がいいよね


・第1部  導入文 4
　モデルとは
   問題を解決する上で関連数r側面を抽象化し　それ以外を無視する 解釈

  ソフトウェアは　使用するユーザの活動・関心と関連がある
  
  システム <--> ドメイン
  航空会社予約システム <--> 航空機に搭乗する人 を含む
  会計システム        <--> 金銭・財務 // 財務ってなんだ？
  ソースコード管理システム <--> フォルトウェア開発そのもの

●ドメイン駆動設計におけるモデルの有用性
　モデルの3つの基本的用法
  - モデルと設計の核心が相互に形成し合う
      モデル = 設計 としようとしている
      モデルの変更がすなわち設計に反省される
      一方で、設計の変更はモデルには影響がないようにする
      => ch3

  - モデルは、チームメンバ全員が使用する言語の基盤である。
      ユビキタス言語のことをいっている？
      => ch2

  - モデルとは、蒸留された知識である
      モデル = ドメインをどう扱うかという考え めっちゃ大事
      
●ソフトウェアの核心
   ソフトウェアの核心 := domain　に関連したの問題をユーザのために解決する能力
　　概してエンジニアはドメインを知らずに技術でもって解決しようとするが本質ではない。
   ソフトウェアの核心 : ドメイン知識 >　技術力 (FW とか 技術が新しいとか。。。)

　　とはいえ、kドメインの開発にはかなりの設計技術が必要である。

・第2部  導入文 2
　モデル駆動設計の構成要素
  
  domain と実装が互いに互いを強調するようにするには
  要素の詳細に注目する必要がある。
  >> 責務駆動設計
  基本原則が モデル駆動設計をどのように支えているかを理解する必要がある


・第3部  導入文 5
・第4部  導入文 2
・結論   6
